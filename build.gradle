plugins {
    id('java')
    id('org.springframework.boot') version '3.3.6'
    id('io.spring.dependency-management') version '1.1.6'
    id('org.asciidoctor.jvm.convert') version '3.3.2'
}

group = 'io.rapidtogo'
version = '0.0.1-SNAPSHOT'

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'build/resources/main/static/api-docs'
    }
}

jar {
    enabled = false
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.6'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.6'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.6'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.6'
    implementation 'com.h2database:h2:2.2.224'
    implementation 'org.springframework.session:spring-session-core:3.3.3'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.14.1'
    implementation 'org.postgresql:postgresql:42.7.4'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.3.6'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.6'
    testImplementation 'com.h2database:h2:2.2.224'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.3'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file('src/main/resources/static/api-docs')
    inputs.dir snippetsDir
    configurations "asciidoctorExt"
    dependsOn test
}
